<div id="google-map"></div>
<div class="range-label">overlay opacity</div>
<!- div id="coords"></div-->
<input id="opacity" class="range-slider" type="range" value= "0.8" min="0.0" max="1.0" step="0.05" />

<script>


function initMap() {
 var mapCenter = {lat: <%= @map.center_lat %>, lng:<%= @map.center_long %>},
    overlayURL = '<%= @map.overlay_URL %>',
    overlayBounds = {
      north: <%= @map.overlay_north %>,
      south: <%= @map.overlay_south %>,
      east: <%= @map.overlay_east %>,
      west: <%= @map.overlay_west %>
   }


 // Generate map
  enhancedMap = new google.maps.Map(document.getElementById('google-map'), {
    center: mapCenter,
    zoom: <%= @map.zoom %>,
    scrollwheel: false,
    styles: [{
      featureType: 'poi.business',
      elementType: 'labels',
      stylers: [{
        visibility: 'off'
      }]
    }]
  });


  /*  var coordsDiv = document.getElementById('coords');
  enhancedMap.controls[google.maps.ControlPosition.TOP_CENTER].push(coordsDiv);
  enhancedMap.addListener('mousemove', function(event) {
    coordsDiv.textContent =
      'lat: ' + Math.round(event.latLng.lat()) + ', ' +
      'lng: ' + Math.round(event.latLng.lng());
  });

*/

  mapOverlay = new google.maps.GroundOverlay(overlayURL, overlayBounds);
  mapOverlay.setMap(enhancedMap);

  infowindow = new google.maps.InfoWindow();
  var opacitySlider = document.getElementById('opacity');
    function setOpacity() {
      mapOverlay.setOpacity(parseFloat(opacitySlider.value));
    }
  setOpacity ();
  opacitySlider.addEventListener("input",setOpacity);

  <%= if @is_edit do  %>
      /* handles for adjusting the overlay */
    var handleIcon = {
      url: "https://upload.wikimedia.org/wikipedia/commons/d/d1/Square.png",
      scaledSize: new google.maps.Size(10, 10),
    }

  topLeftHandle = new google.maps.Marker({
                        icon: handleIcon,
                        draggable: true,
                        map: enhancedMap,
                        position: {lat: <%=@map.overlay_north %>,
                                  lng: <%=@map.overlay_west %>
                        }
                  });
 
  bottomRightHandle = new google.maps.Marker({
                        icon: handleIcon,
                        draggable: true,
                        map: enhancedMap,
                        position: {lat: <%=@map.overlay_south %>,
                                  lng: <%=@map.overlay_east %>
                        }
                  });
  

  function updateOverlayBounds() {
    var newTopLeft = topLeftHandle.getPosition();
    var newBottomRight = bottomRightHandle.getPosition();
    var newBounds = new google.maps.LatLngBounds();

    /* switch from nw,se handles to ne,sw bounding box */
    newBounds.extend(newTopLeft);
    newBounds.extend(newBottomRight);
    mapOverlay.set("bounds", newBounds);

    mapOverlay.setMap(enhancedMap);
  }
  
  
  google.maps.event.addListener(topLeftHandle,'drag',updateOverlayBounds);
  google.maps.event.addListener(bottomRightHandle,'drag',updateOverlayBounds);

  google.maps.event.addListener(topLeftHandle, 'dragend', updateMap)
  google.maps.event.addListener(bottomRightHandle, 'dragend', updateMap)
  function updateMap() {
    var newTopLeft = topLeftHandle.getPosition();
    var newBottomRight = bottomRightHandle.getPosition();
    var jsonRequestData = 
          {map: 
            {
            overlay_north: newTopLeft.lat()+"",
            overlay_west: newTopLeft.lng()+"",
            overlay_south: newBottomRight.lat()+"",
            overlay_east: newBottomRight.lng()+""
            }
          };
      jsonRequest("PATCH","/api/map/"+map_id,jsonRequestData);
    }

<% end %>

  /* set up markers */
  var markerIcon = {
    url: "<%= @map.marker_URL %>",
    scaledSize: new google.maps.Size(15, 40)
  };

  markers = <%= raw Poison.encode!(@map.markers) %>;
  map_id = <%= @map.id %>;
    markers.forEach(function(JSONMarker) {
      var markerPosition = { lat: parseFloat(JSONMarker.lat),
                             lng: parseFloat(JSONMarker.long)
      };

      var marker = new google.maps.Marker({
                    icon: markerIcon,
                    draggable: <%= if @is_edit, do: "true", else: "false" %>,
                    map: enhancedMap,
                    position: markerPosition,
                    scaledSize: new google.maps.Size(30, 30),
                    anchor: new google.maps.Point(20,40)
      });
      marker.JSON = JSONMarker;
      var  infowindowContent = '<div class="infowindow-content">' +
                              '<div class="infowindow-content__image">' +
                                '<img src="'+ JSONMarker.img_URL+'"' +
                               '</div>' +
                              '<div class="infowindow-content__text">' +
                                '<h3 class="infowindow-content__heading">' +
                                    JSONMarker.name +
                                '</h3>' +
                                '<p class="infowindow-content__text">' + 
                                  JSONMarker.text +
                                '</p>' +
                              '</div>' +
                            '</div>';

       google.maps.event.addListener(marker, 'click', 
           (function(marker) {
              return function() {
                  infowindow.setContent(infowindowContent);
                  infowindow.open(enhancedMap, marker);
                  }
              })(marker));
      google.maps.event.addListener(marker, 'dragend', 
          function(e) {
            marker.JSON.lat = e.latLng.lat()+"";
            marker.JSON.long = e.latLng.lng()+"";
            jsonRequestData= { marker: marker.JSON };
            jsonRequest("PATCH","/api/map/"+map_id+"/markers/"+marker.JSON.id,jsonRequestData);
          });

    });
}

function jsonRequest(type, url, jsonData, callback,callback_params) {
  var csrf = document.querySelector("meta[name=csrf]").content;
  var xhttp = new XMLHttpRequest();
  if (callback) {
    xhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        callback(callback_params)
      }
    }
  }
  xhttp.open(type, url, true);
  xhttp.setRequestHeader("Content-Type", "application/json");
  xhttp.setRequestHeader("Accept", "application/json");
  xhttp.setRequestHeader("X-CSRF-TOKEN", csrf);
  xhttp.send(JSON.stringify(jsonData));
}

</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCo4Y2q3GO6_gO-XmE8eqjdO1aah_2RbB0&callback=initMap">
</script>

